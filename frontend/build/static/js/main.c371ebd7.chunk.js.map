{"version":3,"sources":["assets/usa.txt","components/Tile.js","components/Board.js","components/Topbar.js","components/Output.js","App.js","index.js"],"names":["module","exports","Tile","props","state","classes","this","value","className","root","style","fontSize","Component","withStyles","theme","height","width","display","backgroundColor","alignItems","justifyContent","withTheme","Board","boardarry","GridList","cellHeight","component","Paper","elevation","cols","map","i","GridListTile","key","TopBar","dict","AppBar","position","Toolbar","Typography","variant","Button","color","onClick","fetch","then","r","text","console","log","setState","words","List","word","ListItem","align","maxHeight","maxWidth","overflow","transition","App","CssBaseline","Topbar","Grid","container","direction","justify","item","Output","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c371ebd7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/usa.88993b53.txt\";","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  root: {\n    height: 80,\n    width: 80, \n    display: \"flex\",\n    backgroundColor: '#acfcba',\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    \n  }\n});\n\nclass Tile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { classes } = this.props;\n    const {value} = this.props;\n    return (\n      <div className={classes.root}>\n        <span style={{ fontSize: \"40px\" }}>{value}</span>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(Tile);\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Paper, Typography, GridList, GridListTile } from \"@material-ui/core\";\nimport Tile from \"./Tile\";\n\nconst styles = theme => ({\n\troot: {\n\t\theight: 340,\n\t\twidth: 340,\n\t\tdisplay: \"flex\",\n\t\t// backgroundColor: 'transparent',\n\t\t// boxShadow: 'none',\n\t}\n});\n\nclass Board extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\n\t\t};\n\t}\n\n\t\n\n\trender() {\n\t\tconst { classes } = this.props;\n\t\tconst { boardarry } = this.props;\n\t\tconst value = 5;\n\t\treturn (\n\t\t\t\t<GridList cellHeight={80} component={Paper} elevation={5} className={classes.root} cols={4}>\n\t\t\t\t\t{boardarry.map((value, i) => \n\t\t\t\t\t\t<GridListTile key={i} cols={1}>\n\t\t\t\t\t\t\t<Tile value={value}/>\n\t\t\t\t\t\t</GridListTile>\n\t\t\t\t\t)}\n\t\t\t\t</GridList>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles, { withTheme: true })(Board);\n","import React, { Component } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst styles = theme => ({\n  root: {\n    height: \"100vh\"\n  }\n});\n\nclass TopBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const { classes, dict } = this.props;\n    return (\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\">News</Typography>\n          <Button variant=\"contained\" color=\"secondary\" onClick={() => {\n\nfetch('./assets/usa.txt')\n.then((r) => r.text())\n.then(text  => {\n  console.log(text);\n})  \n} }>\n            Secondary\n          </Button>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(TopBar);\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport {\n\tPaper,\n\tList,\n\tListItem,\n\tTypography\n} from \"@material-ui/core\";\n\nconst styles = theme => ({\n\troot: {\n\t\twidth: 300,\n\t\theight: 650,\n\t\tmaxHeight: 650,\n\t\tmaxWidth: 300,\n\t\tposition: \"relative\",\n        overflow: \"auto\",\n        // backgroundColor: 'transparent',\n\t},\n\ttext: {\n        width: \"100%\",\n        transition: \"color .3s\",\n        fontSize: 20,\n        '&:hover': {\n            color: 'red'\n        }\n        \n\t}\n});\n\nclass Board extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setState({\n\t\t\tboardarry: [5, 2, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5]\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { classes, words } = this.props;\n\n\t\treturn (\n\t\t\t<List component={Paper} elevation={0} className={classes.root}>\n\t\t\t\t{words.map((word, i) => (\n\t\t\t\t\t<ListItem key={i}>\n\t\t\t\t\t\t<Typography className={classes.text} align=\"center\">\n\t\t\t\t\t\t\t{word}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</ListItem>\n\t\t\t\t))}\n\t\t\t</List>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles, { withTheme: true })(Board);\n","import React, { Component } from \"react\";\nimport Board from \"./components/Board.js\";\nimport Topbar from \"./components/Topbar\";\nimport Output from \"./components/Output\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport dict from \"./assets/usa.txt\"\nimport { Grid } from \"@material-ui/core\";\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n      boardarry: [],\n      words: [\"Jerold\", \"Brittany\", \"Brittany\", \"Brittany\", \"Brittany\", \"Brittany\", \"Brittany\", \"Brittany\", \"Brittany\", \"Brittany\", \"Brittany\", \"Brittany\", \"Brittany\", \"Brittany\", \"Brittany\", \"Brittany\", \"Brittany\", \"Brittany\", \"Brittany\", \"Brittany\", \"Brittany\", \"Brittany\", \"Brittany\", \"Brittany\", \"Brittany\", \"Brittany\", \"Brittany\", \"Brittany\", \"Brittany\", \"Brittany\"]\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setState({\n\t\t\tboardarry: [\n\t\t\t\t\"b\",\n\t\t\t\t\"b\",\n\t\t\t\t\"c\",\n\t\t\t\t\"d\",\n\t\t\t\t\"e\",\n\t\t\t\t\"f\",\n\t\t\t\t\"g\",\n\t\t\t\t\"h\",\n\t\t\t\t\"i\",\n\t\t\t\t\"k\",\n\t\t\t\t\"l\",\n\t\t\t\t\"m\",\n\t\t\t\t\"n\",\n\t\t\t\t\"o\",\n\t\t\t\t\"p\",\n\t\t\t\t\"q\"\n\t  ],\n\t   \n\t\t});\n\t}\n\n\trender() {\n\n\t\tconst { boardarry, words, dict } = this.state;\n\t\treturn (\n\t\t\t<div style={{ height: \"100vh\" }}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Topbar dict={dict}/>\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\tjustify=\"space-evenly\"\n\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\tstyle={{ height: \"90vh\" }}\n\t\t\t\t>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Board boardarry={boardarry} />\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid>\n\t\t\t\t\t\t<Output words={words}/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t\t<App />,\n\tdocument.getElementById(\"root\")\n);"],"sourceRoot":""}